version: '3'

vars:
  CONFIG: config.dev.toml
  MIGRATIONS: ./pkg/storage/db/migrations
  CSS_IN: ./pkg/ui/css/global.css
  CSS_OUT: ./pkg/static/public/css/global.css

tasks:
  setup:config:
    cmds:
      - cp config.toml {{.CONFIG}}

  setup:tooling:
    cmds:
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      - go install github.com/a-h/templ/cmd/templ@latest
      - go install github.com/air-verse/air@latest
      - go install honnef.co/go/tools/cmd/staticcheck@latest
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install github.com/securego/gosec/v2/cmd/gosec@latest

  gen:sqlc:
    cmds:
      - sqlc generate

  gen:templ:
    cmds:
      - templ generate

  gen:tailwind:
    cmds:
      - ./tmp/tailwindcss -i {{.CSS_IN}} -o {{.CSS_OUT}} --watch --minify

  migrate:add:
    vars:
      SEQ: '{{default "initial" .SEQ}}'
    cmds:
      - migrate create -ext sql -dir {{.MIGRATIONS}} -seq "{{.SEQ}}"

  migrate:up:
    cmds:
      - go run . migrate --config {{.CONFIG}} up

  migrate:down:
    cmds:
      - go run . migrate --config {{.CONFIG}} down

  dev:fmt:
    cmds:
      - gofmt -l -w .

  dev:lint:
    cmds:
      - go vet ./...
      - staticcheck ./...
      - golangci-lint run ./...
      - govulncheck
      - gosec ./...